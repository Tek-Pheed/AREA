name: API - Pipeline

on:
  push:
    pull_request:
      branches:
        - dev

jobs:
  api_compile_test:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install npm dependencies
        run: |
          cd api
          npm i
      - name: Build
        run: |
          cd api/
          npm run build
  api_coverage_test:
    name: Test
    runs-on: ubuntu-latest
    permissions: write-all
    needs: api_compile_test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install npm dependencies
        run: |
          cd api
          npm i
      - name: Setup env file
        run: |
          cd api/
          echo "${{secrets.ENV_FILE}}" > .env
      - name: Run test
        run: |
          cd api/
          npm test
      - name: Summary Coverage Report
        uses: kcjpop/coverage-comments@v2.2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-file: 'api/coverage/lcov.info'
  api_deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: api_coverage_test
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          username: ${{ secrets.SSH_USERNAME }}
          server: ${{ secrets.SSH_HOST }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          local_path: "./api/*"
          remote_path: "./area-api/"
          sftpArgs: "-o ConnectTimeout=5"
      - name: Restart services
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: echo ${{ secrets.SSH_PASSWORD }} | sudo -S systemctl restart api-area.service